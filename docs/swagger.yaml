basePath: /api/v1
definitions:
  dtos.HttpErrorDTO:
    properties:
      reason:
        type: string
      statusCode:
        type: integer
      timestamp:
        type: string
    type: object
  usecases.CreateAccountRequestDTO:
    properties:
      birthdate:
        type: string
      cpf:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
    type: object
  usecases.CreateAccountResponseDTO:
    properties:
      balance:
        type: number
      birthdate:
        type: string
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    type: object
  usecases.FindAccountByCPFResponseDTO:
    properties:
      balance:
        type: number
      birthdate:
        type: string
      cpf:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    type: object
  usecases.SignRequestDTO:
    properties:
      cpf:
        type: string
      password:
        type: string
    type: object
  usecases.SignResponseDTO:
    properties:
      accessToken:
        type: string
    type: object
  usecases.TransactionRequestDTO:
    properties:
      accountDestiny:
        type: string
      accountOrigin:
        type: string
      value:
        type: number
    type: object
info:
  contact:
    email: patrick@mybank.com.br
    name: My bank support
    url: mybank.com.br
  description: A api for my bank operations
  title: My Bank API
  version: "1.0"
paths:
  /accounts:
    post:
      consumes:
      - application/json
      description: My bank new client and account
      parameters:
      - description: Create account parameters
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usecases.CreateAccountRequestDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/usecases.CreateAccountResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
      summary: Create a new account
      tags:
      - Accounts
  /accounts/{cpf}:
    get:
      consumes:
      - application/json
      description: Find account using the Brazilian individual taxpayer registry identification
        number (CPF)
      parameters:
      - description: Brazilian individual taxpayer registry identification number
          (CPF)
        in: path
        name: cpf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Account found successfully
          schema:
            $ref: '#/definitions/usecases.FindAccountByCPFResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
      security:
      - ApiKeyAuth: []
      summary: Find account by CPF
      tags:
      - Accounts
  /auth:
    post:
      consumes:
      - application/json
      description: Login in api with cpf and password
      parameters:
      - description: Login params
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usecases.SignRequestDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/usecases.SignResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
      summary: Login
      tags:
      - Auth
  /transactions:
    post:
      consumes:
      - application/json
      description: Add a bank transacation
      parameters:
      - description: Transaction details
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usecases.TransactionRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.HttpErrorDTO'
      security:
      - ApiKeyAuth: []
      summary: Create Transacation
      tags:
      - Transactions
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: accessToken
    type: apiKey
swagger: "2.0"
